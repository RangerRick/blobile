{"version":3,"mappings":"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","names":["findCheckedOption","el","tagName","nodeType","toUpperCase","Array","from","querySelectorAll","find","o","value","Select","constructor","hostRef","registerInstance","this","ionChange","createEvent","ionCancel","ionFocus","ionBlur","ionStyle","inputId","selectIds","didInit","isExpanded","disabled","cancelText","okText","name","multiple","interfaceOptions","onClick","ev","setFocus","open","onFocus","emit","onBlur","disabledChanged","emitStyle","valueChanged","connectedCallback","e","updateOverlayOptions","mutationO","containerEl","onChange","MutationObserver","mutation","mutationList","newOption","forEach","mut","i","addedNodes","length","observe","childList","subtree","c","regeneratorRuntime","disconnectedCallback","disconnect","componentDidLoad","event","t","overlay","_context3","createOverlay","onDidDismiss","then","present","selectInterface","console","warn","openPopover","openActionSheet","openAlert","childOpts","interface","buttons","createActionSheetButtons","popover","querySelector","options","createPopoverOptions","inputs","createAlertInputs","data","selectValue","actionSheetButtons","map","option","getOptionValue","copyClasses","classList","filter","cls","join","optClass","OPTION_CLASS","role","isOptionSelected","compareWith","text","textContent","cssClass","handler","push","inputType","type","label","checked","close","mode","getIonMode","popoverOpts","Object","assign","component","componentProps","header","subHeader","message","_context4","popoverController","actionSheetOpts","_context5","actionSheetController","getLabel","labelText","alertOpts","selectedValues","_context6","alertController","dismiss","Promise","resolve","findItemLabel","hasValue","getText","selectedText","generateText","focusEl","focus","interactive","select","placeholder","render","_ref","labelId","getAriaLabel","renderHiddenInput","parseValue","addPlaceholderClass","selectText","selectTextClasses","textPart","displayLabel","h","Host","class","hostContext","part","id","ref","getElement","currentValue","compareValue","isArray","some","val","compareOptions","toString","includes","opts","v","textForValue","opt","selectOpt","style","ios","md","SelectOption","selectOptionIds","SelectPopover","onSelect","target","safeCall","checkedOption","checkedValue","getClassMap"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-select_3.entry.js"],"sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { h as findItemLabel, d as getAriaLabel, e as renderHiddenInput } from './helpers-dd7e4b7b.js';\nimport { c as popoverController, b as actionSheetController, a as alertController, s as safeCall } from './overlays-e9ccff30.js';\nimport { h as hostContext, g as getClassMap } from './theme-ff3fc52f.js';\nimport './hardware-back-button-4a6b37fb.js';\n\nconst watchForOptions = (containerEl, tagName, onChange) => {\n  /* tslint:disable-next-line */\n  if (typeof MutationObserver === 'undefined') {\n    return;\n  }\n  const mutation = new MutationObserver(mutationList => {\n    onChange(getSelectedOption(mutationList, tagName));\n  });\n  mutation.observe(containerEl, {\n    childList: true,\n    subtree: true\n  });\n  return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n  let newOption;\n  mutationList.forEach(mut => {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < mut.addedNodes.length; i++) {\n      newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n    }\n  });\n  return newOption;\n};\nconst findCheckedOption = (el, tagName) => {\n  if (el.nodeType !== 1) {\n    return undefined;\n  }\n  const options = (el.tagName === tagName.toUpperCase())\n    ? [el]\n    : Array.from(el.querySelectorAll(tagName));\n  return options.find((o) => o.value === el.value);\n};\n\nconst selectIosCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}button{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-2px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:20px}.select-icon{width:12px;height:18px}\";\n\nconst selectMdCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}button{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-2px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:16px}.select-icon{width:19px;height:19px}:host-context(.item-label-floating) .select-icon{-webkit-transform:translate3d(0,  -9px,  0);transform:translate3d(0,  -9px,  0)}\";\n\nconst Select = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-sel-${selectIds++}`;\n    this.didInit = false;\n    this.isExpanded = false;\n    /**\n     * If `true`, the user cannot interact with the select.\n     */\n    this.disabled = false;\n    /**\n     * The text to display on the cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the ok button.\n     */\n    this.okText = 'OK';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the select can accept multiple values.\n     */\n    this.multiple = false;\n    /**\n     * The interface the select should use: `action-sheet`, `popover` or `alert`.\n     */\n    this.interface = 'alert';\n    /**\n     * Any additional options that the `alert`, `action-sheet` or `popover` interface\n     * can take. See the [ion-alert docs](../alert), the\n     * [ion-action-sheet docs](../action-sheet) and the\n     * [ion-popover docs](../popover) for the\n     * create options for each interface.\n     *\n     * Note: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\n     */\n    this.interfaceOptions = {};\n    this.onClick = (ev) => {\n      this.setFocus();\n      this.open(ev);\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  valueChanged() {\n    this.emitStyle();\n    if (this.didInit) {\n      this.ionChange.emit({\n        value: this.value,\n      });\n    }\n  }\n  async connectedCallback() {\n    this.updateOverlayOptions();\n    this.emitStyle();\n    this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n      this.updateOverlayOptions();\n    });\n  }\n  disconnectedCallback() {\n    if (this.mutationO) {\n      this.mutationO.disconnect();\n      this.mutationO = undefined;\n    }\n  }\n  componentDidLoad() {\n    this.didInit = true;\n  }\n  /**\n   * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n   * depending on the `interface` property on the `ion-select`.\n   *\n   * @param event The user interface event that called the open.\n   */\n  async open(event) {\n    if (this.disabled || this.isExpanded) {\n      return undefined;\n    }\n    const overlay = this.overlay = await this.createOverlay(event);\n    this.isExpanded = true;\n    overlay.onDidDismiss().then(() => {\n      this.overlay = undefined;\n      this.isExpanded = false;\n      this.setFocus();\n    });\n    await overlay.present();\n    return overlay;\n  }\n  createOverlay(ev) {\n    let selectInterface = this.interface;\n    if ((selectInterface === 'action-sheet' || selectInterface === 'popover') && this.multiple) {\n      console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n      selectInterface = 'alert';\n    }\n    if (selectInterface === 'popover' && !ev) {\n      console.warn('Select interface cannot be a \"popover\" without passing an event. Using the \"alert\" interface instead.');\n      selectInterface = 'alert';\n    }\n    if (selectInterface === 'popover') {\n      return this.openPopover(ev);\n    }\n    if (selectInterface === 'action-sheet') {\n      return this.openActionSheet();\n    }\n    return this.openAlert();\n  }\n  updateOverlayOptions() {\n    const overlay = this.overlay;\n    if (!overlay) {\n      return;\n    }\n    const childOpts = this.childOpts;\n    const value = this.value;\n    switch (this.interface) {\n      case 'action-sheet':\n        overlay.buttons = this.createActionSheetButtons(childOpts, value);\n        break;\n      case 'popover':\n        const popover = overlay.querySelector('ion-select-popover');\n        if (popover) {\n          popover.options = this.createPopoverOptions(childOpts, value);\n        }\n        break;\n      case 'alert':\n        const inputType = (this.multiple ? 'checkbox' : 'radio');\n        overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n        break;\n    }\n  }\n  createActionSheetButtons(data, selectValue) {\n    const actionSheetButtons = data.map(option => {\n      const value = getOptionValue(option);\n      // Remove hydrated before copying over classes\n      const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n      const optClass = `${OPTION_CLASS} ${copyClasses}`;\n      return {\n        role: (isOptionSelected(value, selectValue, this.compareWith) ? 'selected' : ''),\n        text: option.textContent,\n        cssClass: optClass,\n        handler: () => {\n          this.value = value;\n        }\n      };\n    });\n    // Add \"cancel\" button\n    actionSheetButtons.push({\n      text: this.cancelText,\n      role: 'cancel',\n      handler: () => {\n        this.ionCancel.emit();\n      }\n    });\n    return actionSheetButtons;\n  }\n  createAlertInputs(data, inputType, selectValue) {\n    const alertInputs = data.map(option => {\n      const value = getOptionValue(option);\n      // Remove hydrated before copying over classes\n      const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n      const optClass = `${OPTION_CLASS} ${copyClasses}`;\n      return {\n        type: inputType,\n        cssClass: optClass,\n        label: option.textContent || '',\n        value,\n        checked: isOptionSelected(value, selectValue, this.compareWith),\n        disabled: option.disabled\n      };\n    });\n    return alertInputs;\n  }\n  createPopoverOptions(data, selectValue) {\n    const popoverOptions = data.map(option => {\n      const value = getOptionValue(option);\n      // Remove hydrated before copying over classes\n      const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n      const optClass = `${OPTION_CLASS} ${copyClasses}`;\n      return {\n        text: option.textContent || '',\n        cssClass: optClass,\n        value,\n        checked: isOptionSelected(value, selectValue, this.compareWith),\n        disabled: option.disabled,\n        handler: () => {\n          this.value = value;\n          this.close();\n        }\n      };\n    });\n    return popoverOptions;\n  }\n  async openPopover(ev) {\n    const interfaceOptions = this.interfaceOptions;\n    const mode = getIonMode(this);\n    const value = this.value;\n    const popoverOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], event: ev, componentProps: {\n        header: interfaceOptions.header,\n        subHeader: interfaceOptions.subHeader,\n        message: interfaceOptions.message,\n        value,\n        options: this.createPopoverOptions(this.childOpts, value)\n      } });\n    return popoverController.create(popoverOpts);\n  }\n  async openActionSheet() {\n    const mode = getIonMode(this);\n    const interfaceOptions = this.interfaceOptions;\n    const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n    return actionSheetController.create(actionSheetOpts);\n  }\n  async openAlert() {\n    const label = this.getLabel();\n    const labelText = (label) ? label.textContent : null;\n    const interfaceOptions = this.interfaceOptions;\n    const inputType = (this.multiple ? 'checkbox' : 'radio');\n    const mode = getIonMode(this);\n    const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n        {\n          text: this.cancelText,\n          role: 'cancel',\n          handler: () => {\n            this.ionCancel.emit();\n          }\n        },\n        {\n          text: this.okText,\n          handler: (selectedValues) => {\n            this.value = selectedValues;\n          }\n        }\n      ], cssClass: ['select-alert', interfaceOptions.cssClass,\n        (this.multiple ? 'multiple-select-alert' : 'single-select-alert')] });\n    return alertController.create(alertOpts);\n  }\n  /**\n   * Close the select interface.\n   */\n  close() {\n    // TODO check !this.overlay || !this.isFocus()\n    if (!this.overlay) {\n      return Promise.resolve(false);\n    }\n    return this.overlay.dismiss();\n  }\n  getLabel() {\n    return findItemLabel(this.el);\n  }\n  hasValue() {\n    return this.getText() !== '';\n  }\n  get childOpts() {\n    return Array.from(this.el.querySelectorAll('ion-select-option'));\n  }\n  getText() {\n    const selectedText = this.selectedText;\n    if (selectedText != null && selectedText !== '') {\n      return selectedText;\n    }\n    return generateText(this.childOpts, this.value, this.compareWith);\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive': true,\n      'select': true,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'interactive-disabled': this.disabled,\n      'select-disabled': this.disabled\n    });\n  }\n  render() {\n    const { disabled, el, inputId, isExpanded, name, placeholder, value } = this;\n    const mode = getIonMode(this);\n    const { labelText, labelId } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, parseValue(value), disabled);\n    const displayValue = this.getText();\n    let addPlaceholderClass = false;\n    let selectText = displayValue;\n    if (selectText === '' && placeholder != null) {\n      selectText = placeholder;\n      addPlaceholderClass = true;\n    }\n    const selectTextClasses = {\n      'select-text': true,\n      'select-placeholder': addPlaceholderClass\n    };\n    const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n    // If there is a label then we need to concatenate it with the\n    // current value (or placeholder) and a comma so it separates\n    // nicely when the screen reader announces it, otherwise just\n    // announce the value / placeholder\n    const displayLabel = labelText !== undefined\n      ? (selectText !== '' ? `${selectText}, ${labelText}` : labelText)\n      : selectText;\n    return (h(Host, { onClick: this.onClick, role: \"button\", \"aria-haspopup\": \"listbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-label\": displayLabel, class: {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'select-disabled': disabled,\n        'select-expanded': isExpanded\n      } }, h(\"div\", { \"aria-hidden\": \"true\", class: selectTextClasses, part: textPart }, selectText), h(\"div\", { class: \"select-icon\", role: \"presentation\", part: \"icon\" }, h(\"div\", { class: \"select-icon-inner\" })), h(\"label\", { id: labelId }, displayLabel), h(\"button\", { type: \"button\", disabled: disabled, id: inputId, \"aria-labelledby\": labelId, \"aria-haspopup\": \"listbox\", \"aria-expanded\": `${isExpanded}`, onFocus: this.onFocus, onBlur: this.onBlur, ref: (focusEl => this.focusEl = focusEl) })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"placeholder\": [\"disabledChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nconst isOptionSelected = (currentValue, compareValue, compareWith) => {\n  if (currentValue === undefined) {\n    return false;\n  }\n  if (Array.isArray(currentValue)) {\n    return currentValue.some(val => compareOptions(val, compareValue, compareWith));\n  }\n  else {\n    return compareOptions(currentValue, compareValue, compareWith);\n  }\n};\nconst getOptionValue = (el) => {\n  const value = el.value;\n  return (value === undefined)\n    ? el.textContent || ''\n    : value;\n};\nconst parseValue = (value) => {\n  if (value == null) {\n    return undefined;\n  }\n  if (Array.isArray(value)) {\n    return value.join(',');\n  }\n  return value.toString();\n};\nconst compareOptions = (currentValue, compareValue, compareWith) => {\n  if (typeof compareWith === 'function') {\n    return compareWith(currentValue, compareValue);\n  }\n  else if (typeof compareWith === 'string') {\n    return currentValue[compareWith] === compareValue[compareWith];\n  }\n  else {\n    return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;\n  }\n};\nconst generateText = (opts, value, compareWith) => {\n  if (value === undefined) {\n    return '';\n  }\n  if (Array.isArray(value)) {\n    return value\n      .map(v => textForValue(opts, v, compareWith))\n      .filter(opt => opt !== null)\n      .join(', ');\n  }\n  else {\n    return textForValue(opts, value, compareWith) || '';\n  }\n};\nconst textForValue = (opts, value, compareWith) => {\n  const selectOpt = opts.find(opt => {\n    return compareOptions(getOptionValue(opt), value, compareWith);\n  });\n  return selectOpt\n    ? selectOpt.textContent\n    : null;\n};\nlet selectIds = 0;\nconst OPTION_CLASS = 'select-interface-option';\nSelect.style = {\n  ios: selectIosCss,\n  md: selectMdCss\n};\n\nconst selectOptionCss = \":host{display:none}\";\n\nconst SelectOption = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `ion-selopt-${selectOptionIds++}`;\n    /**\n     * If `true`, the user cannot interact with the select option. This property does not apply when `interface=\"action-sheet\"` as `ion-action-sheet` does not allow for disabled buttons.\n     */\n    this.disabled = false;\n  }\n  render() {\n    return (h(Host, { role: \"option\", id: this.inputId, class: getIonMode(this) }));\n  }\n  get el() { return getElement(this); }\n};\nlet selectOptionIds = 0;\nSelectOption.style = selectOptionCss;\n\nconst selectPopoverCss = \".sc-ion-select-popover-h ion-list.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}.sc-ion-select-popover-h ion-list-header.sc-ion-select-popover,.sc-ion-select-popover-h ion-label.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nconst SelectPopover = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** Array of options for the popover */\n    this.options = [];\n  }\n  onSelect(ev) {\n    const option = this.options.find(o => o.value === ev.target.value);\n    if (option) {\n      safeCall(option.handler);\n    }\n  }\n  render() {\n    const checkedOption = this.options.find(o => o.checked);\n    const checkedValue = checkedOption ? checkedOption.value : undefined;\n    return (h(Host, { class: getIonMode(this) }, h(\"ion-list\", null, this.header !== undefined && h(\"ion-list-header\", null, this.header), (this.subHeader !== undefined || this.message !== undefined) &&\n      h(\"ion-item\", null, h(\"ion-label\", { class: \"ion-text-wrap\" }, this.subHeader !== undefined && h(\"h3\", null, this.subHeader), this.message !== undefined && h(\"p\", null, this.message))), h(\"ion-radio-group\", { value: checkedValue }, this.options.map(option => h(\"ion-item\", { class: getClassMap(option.cssClass) }, h(\"ion-label\", null, option.text), h(\"ion-radio\", { value: option.value, disabled: option.disabled })))))));\n  }\n};\nSelectPopover.style = selectPopoverCss;\n\nexport { Select as ion_select, SelectOption as ion_select_option, SelectPopover as ion_select_popover };\n"]}