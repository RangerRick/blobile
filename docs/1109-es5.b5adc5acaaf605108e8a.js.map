{"version":3,"mappings":"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","names":["w","getId","uuid","e","getUid","getInfo","navigator","userAgent","unavailable","ua","uaFields","parseUa","_context2","model","platform","operatingSystem","osVersion","manufacturer","vendor","isVirtual","webViewVersion","browserVersion","getBatteryInfo","getBattery","battery","_context3","batteryLevel","level","isCharging","charging","getLanguageCode","value","language","start","indexOf","end","fields","substring","tmpFields","replace","split","pop","oscpu","lastParts","length","test","window","MSStream","isFirefox","InstallTrigger","isSafari","ApplePaySession","isChrome","chrome","isEdge","isFirefoxIOS","isChromeIOS","isEdgeIOS","searchWord","p","f","_step","word","includes","version","reverse","join","uid","localStorage","getItem","this","uuid4","setItem","c","r","Math","random","toString","WebPlugin"],"sources":["webpack:///node_modules/@capacitor/device/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class DeviceWeb extends WebPlugin {\n    async getId() {\n        return {\n            uuid: this.getUid(),\n        };\n    }\n    async getInfo() {\n        if (typeof navigator === 'undefined' || !navigator.userAgent) {\n            throw this.unavailable('Device API not available in this browser');\n        }\n        const ua = navigator.userAgent;\n        const uaFields = this.parseUa(ua);\n        return {\n            model: uaFields.model,\n            platform: 'web',\n            operatingSystem: uaFields.operatingSystem,\n            osVersion: uaFields.osVersion,\n            manufacturer: navigator.vendor,\n            isVirtual: false,\n            webViewVersion: uaFields.browserVersion,\n        };\n    }\n    async getBatteryInfo() {\n        if (typeof navigator === 'undefined' || !navigator.getBattery) {\n            throw this.unavailable('Device API not available in this browser');\n        }\n        let battery = {};\n        try {\n            battery = await navigator.getBattery();\n        }\n        catch (e) {\n            // Let it fail, we don't care\n        }\n        return {\n            batteryLevel: battery.level,\n            isCharging: battery.charging,\n        };\n    }\n    async getLanguageCode() {\n        return {\n            value: navigator.language,\n        };\n    }\n    parseUa(ua) {\n        const uaFields = {};\n        const start = ua.indexOf('(') + 1;\n        let end = ua.indexOf(') AppleWebKit');\n        if (ua.indexOf(') Gecko') !== -1) {\n            end = ua.indexOf(') Gecko');\n        }\n        const fields = ua.substring(start, end);\n        if (ua.indexOf('Android') !== -1) {\n            const tmpFields = fields.replace('; wv', '').split('; ').pop();\n            if (tmpFields) {\n                uaFields.model = tmpFields.split(' Build')[0];\n            }\n            uaFields.osVersion = fields.split('; ')[1];\n        }\n        else {\n            uaFields.model = fields.split('; ')[0];\n            if (typeof navigator !== 'undefined' && navigator.oscpu) {\n                uaFields.osVersion = navigator.oscpu;\n            }\n            else {\n                if (ua.indexOf('Windows') !== -1) {\n                    uaFields.osVersion = fields;\n                }\n                else {\n                    const tmpFields = fields.split('; ').pop();\n                    if (tmpFields) {\n                        const lastParts = tmpFields\n                            .replace(' like Mac OS X', '')\n                            .split(' ');\n                        uaFields.osVersion = lastParts[lastParts.length - 1].replace(/_/g, '.');\n                    }\n                }\n            }\n        }\n        if (/android/i.test(ua)) {\n            uaFields.operatingSystem = 'android';\n        }\n        else if (/iPad|iPhone|iPod/.test(ua) && !window.MSStream) {\n            uaFields.operatingSystem = 'ios';\n        }\n        else if (/Win/.test(ua)) {\n            uaFields.operatingSystem = 'windows';\n        }\n        else if (/Mac/i.test(ua)) {\n            uaFields.operatingSystem = 'mac';\n        }\n        else {\n            uaFields.operatingSystem = 'unknown';\n        }\n        // Check for browsers based on non-standard javascript apis, only not user agent\n        const isFirefox = !!window.InstallTrigger;\n        const isSafari = !!window.ApplePaySession;\n        const isChrome = !!window.chrome;\n        const isEdge = /Edg/.test(ua);\n        const isFirefoxIOS = /FxiOS/.test(ua);\n        const isChromeIOS = /CriOS/.test(ua);\n        const isEdgeIOS = /EdgiOS/.test(ua);\n        // FF and Edge User Agents both end with \"/MAJOR.MINOR\"\n        if (isSafari ||\n            (isChrome && !isEdge) ||\n            isFirefoxIOS ||\n            isChromeIOS ||\n            isEdgeIOS) {\n            // Safari version comes as     \"... Version/MAJOR.MINOR ...\"\n            // Chrome version comes as     \"... Chrome/MAJOR.MINOR ...\"\n            // FirefoxIOS version comes as \"... FxiOS/MAJOR.MINOR ...\"\n            // ChromeIOS version comes as  \"... CriOS/MAJOR.MINOR ...\"\n            let searchWord;\n            if (isFirefoxIOS) {\n                searchWord = 'FxiOS';\n            }\n            else if (isChromeIOS) {\n                searchWord = 'CriOS';\n            }\n            else if (isEdgeIOS) {\n                searchWord = 'EdgiOS';\n            }\n            else if (isSafari) {\n                searchWord = 'Version';\n            }\n            else {\n                searchWord = 'Chrome';\n            }\n            const words = ua.split(' ');\n            for (const word of words) {\n                if (word.includes(searchWord)) {\n                    const version = word.split('/')[1];\n                    uaFields.browserVersion = version;\n                }\n            }\n        }\n        else if (isFirefox || isEdge) {\n            const reverseUA = ua.split('').reverse().join('');\n            const reverseVersion = reverseUA.split('/')[0];\n            const version = reverseVersion.split('').reverse().join('');\n            uaFields.browserVersion = version;\n        }\n        return uaFields;\n    }\n    getUid() {\n        if (typeof window !== 'undefined') {\n            let uid = window.localStorage.getItem('_capuid');\n            if (uid) {\n                return uid;\n            }\n            uid = this.uuid4();\n            window.localStorage.setItem('_capuid', uid);\n            return uid;\n        }\n        return this.uuid4();\n    }\n    uuid4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n}\n"]}