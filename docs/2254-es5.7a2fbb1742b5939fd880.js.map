{"version":3,"mappings":"ylBAMMA,sBACEA,uBACFA,+CAgCQA,sBAKEA,mFAEAA,sBACEA,SACFA,QACAA,sBACEA,SACFA,QACAA,sBACEA,SACFA,QACFA,kCAbEA,oEAKEA,+BAGAA,+BAGAA,2EAlCVA,sBACEA,8BACEA,6BAAmBA,SAAiBA,QACtCA,QACAA,+BACEA,uBACEA,sBAIEA,sBACEA,mBACFA,QACAA,sBACEA,mBACFA,QACAA,uBACEA,qBACFA,QACFA,QACAA,6BAiBFA,QACFA,QACFA,2CArCuBA,uBAsBEA,mCAAmB,+CA5B9CA,qBACEA,wBACEA,cAAIA,SAAkBA,QACxBA,QACAA,6BAwCFA,0CA1CQA,uBAEkFA,sCAAwB,sBChBxH,ICyCMC,EDzCAC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCsCEH,EAAN,WAQEI,WACUC,EACAC,EACAC,EACAC,aAHAC,gBACAA,uBACAA,gBACAA,cAXVA,gBACAA,aAAU,IAAIC,IAAQ,IACtBD,eAAY,IAAIE,IAAU,IAC1BF,iBAAc,IAAIG,IAAW,IAE7BH,UAAO,CAAEI,WAAY,cANvB,qCAgBQC,4LACEL,KAAKF,SAASQ,QADhBD,OAEJL,KAAKD,OAAOQ,UAAiBC,qBAAyBC,sBAAzBD,wBAAyBC,4FAChDD,aAAeE,MACjBV,KAAKW,QAAUH,EAAIG,QACnBX,KAAKY,UAAYJ,EAAIK,MAAMD,WAE7BZ,KAAKc,cAL+CL,gDAFlDJ,gDAhBR,sBA2BQU,SAASC,yJACkBA,OAA/BC,QAAQC,MAARD,wBAA+BD,IADlBA,SAEOhB,KAAKH,gBAAgBsB,OAAO,CAC9CzB,UAAW0B,IACXC,eAAgB,CACdL,QALSA,OACkBA,OADlBA,SACkBA,OAOZM,UARNN,wFA3BjB,yBAsCQF,mMACES,EAAgB,QAAZC,OAAKb,mBAAOc,WAAEd,QAAQ,GAD5BG,iDA0BEY,OApBN1B,KAAK2B,KAAKC,KAAOL,EAAEK,KAEbC,EAAa,SAACC,EAASC,GAI3B,IAAIC,EAAMC,EAFSrB,UAAUsB,KAAKH,EAAEf,IADtBhB,EAAKY,UAAUsB,KAAKJ,EAAEd,IAWpC,OAPY,IAARgB,IAIFA,EAHoBhC,EAAKmC,YAAYC,MAAMC,QAAQP,EAAEd,IACjChB,EAAKmC,YAAYC,MAAMC,QAAQN,EAAEf,KAKhDgB,GAGHM,EAAUtC,KAAKY,UAAU0B,QAE/BtC,KAAKmC,YAAcnC,KAAKW,QAAQwB,YAAYI,KAAMC,mBAA2BA,EAAWxB,KAAOO,EAAEY,cAzB7FrB,SA0BgBd,KAAKJ,SAAS8B,QA1B9BZ,OA0BEY,EA1BFZ,OA4BE2B,EAA6B,QAAxBC,EAAY,QAAZZ,OAAKnB,mBAAOgC,WAAEvC,sBAAUwC,WAAEC,OAAQC,mBACpCvB,EAAEnB,WAAWiC,QAAQS,EAAE9B,KAAO,IAGvChB,KAAK2B,KAAKvB,WAAaqC,EAAGM,IAAKD,oBACvBE,EAAgB,CACpBhC,GAAI8B,EAAE9B,GACNY,KAAMkB,EAAElB,MAGJqB,EAAY,GAEZC,EAA2B,QAAvBC,EAAY,QAAZC,IAAKzC,mBAAOc,WAAE4B,qBAASV,WAAEE,OAAQS,mBAClCR,EAAEO,UAAUhB,QAAQiB,EAAKtC,KAAO,IAGzCgC,SAAcK,UAAYH,EAAEK,KAAK,SAACzB,EAAaC,GAAd,OACxBD,EAAEF,KAAOG,EAAEH,MAAO,EAAKE,EAAEF,KAAOG,EAAEH,KAAO,EAAI,IACnDmB,IAAKS,YACN,IAAMC,EAAe,CACnBzC,GAAIwC,EAAIxC,GACRY,KAAM4B,EAAI5B,MAGZ6B,SAAa/B,MAAQ8B,EAAI9B,MACtBqB,IAAK/B,mBAAeU,EAAMa,KAAMmB,mBAAe1C,IAAO0C,EAAK1C,OAC3DuC,KAAK1B,GACLkB,IAAKW,YAEN,IAAMC,EAASrB,EAAQoB,EAAK1C,IACtB4C,EAAW,CACf5C,GAAI0C,EAAK1C,GACTY,KAAM8B,EAAKG,SACXC,MAAOJ,EAAKI,MACZC,WAAYL,EAAKK,WACjBC,UAAWN,EAAKM,UAChBC,eAAgBP,EAAKO,eACrBC,cAAeR,EAAKS,qBACpBC,mBAAoBV,EAAKW,0BACzBnC,KAAMyB,EAAOzB,KACboC,OAAQX,EAAOW,OACfC,UAAWZ,EAAOY,UAClBC,aAGFvB,SAAUwB,KAAKb,GAERA,IAGFH,IAGTR,EAAUM,KAAK,SAACzB,EAAaC,GAC3B,IAAIC,EAAMD,EAAEG,KAAOJ,EAAEI,KACrB,OAAY,IAARF,IACFA,EAAMhC,EAAKmC,YAAYC,MAAMC,QAAQP,EAAEd,IAAMhB,EAAKmC,YAAYC,MAAMC,QAAQN,EAAEf,KAGzEgB,IACNa,OAAO,SAAC6B,EAAGC,GAAJ,OACDA,EAAQ,IACd5B,IAAKW,YACNA,EAAKc,cAGAxB,IAGThD,KAAK4E,WAjGD9D,iDAtCR,gBA8IEE,SAAGsC,GACD,OAAIA,GAAQA,EAAKtC,GACRsC,EAAKtC,GAEPsC,kCAlJX/D,KAkJW+D,sCAlJEuB,GAAsBvF,wEAAtBuF,EAAsBC,49BF7CnCxF,wBACEA,yBACEA,qBACEA,uBACFA,QACAA,yBACEA,8BAGFA,QACFA,QACFA,QAEAA,yBACEA,oBACEA,mBACEA,2BA6CFA,QACFA,QACFA,eA/DYA,wBAMOA,iCAUyFA,4CAAoB,4kBE6BnHuF,KD9BAE,EAAb,eAAMxF,EAAN,wBAAM,6CAAOwF,4DAHF,CAACC,cAAsBxF,IACtBwF,QAECD,EAAb,GEEaE,EAAb,eAAM1F,EAAN,wBAAM,6CAAO0F,4DARF,CACPC,KACAC,KACAC,KACAL,MAISE,EAAb","names":["i0","i","routes","path","component","constructor","database","modalController","platform","stream","this","Leagues","Standings","Tiebreaker","subleagues","ngOnInit","ready","subscribe","evt","__awaiter","StreamData","leagues","standings","games","postprocess","openTeam","id","console","debug","create","TeamPageComponent","componentProps","present","l","o","_a","teams","data","name","sortByWins","a","b","ret","bWins","wins","tiebreakers","order","indexOf","records","find","tiebreaker","sl","m","_b","_c","filter","s","map","subLeagueData","teamsData","d","p","u","divisions","item","sort","div","divisionData","team","record","teamData","fullName","emoji","emojiColor","mainColor","secondaryColor","mainTextColor","contrastingMainColor","secondaryTextColor","contrastingSecondaryColor","losses","nonLosses","playoffs","push","_","index","loading","StandingsPageComponent","selectors","StandingsPageRoutingModule","RouterModule","StandingsPageModule","IonicModule","CommonModule","FormsModule"],"sources":["webpack:///src/app/standings/standings.page.html","webpack:///src/app/standings/standings-routing.module.ts","webpack:///src/app/standings/standings.page.ts","webpack:///src/app/standings/standings.module.ts"],"sourcesContent":["<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-title>\n      Standings\n    </ion-title>\n    <ion-buttons slot=\"secondary\">\n      <ion-button *ngIf=\"loading\">\n        <ion-spinner></ion-spinner>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-no-margin\">\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"6\" size-xs=\"12\" size-sm=\"12\" size-md=\"6\" size-lg=\"6\" size-xl=\"6\" *ngFor=\"let subleague of data.subleagues; trackBy: id\">\n        <ion-header class=\"ion-no-border ion-text-center\">\n          <h4>{{subleague.name}}</h4>\n        </ion-header>\n        <ion-card class=\"ion-no-padding ion-no-margin ion-margin-vertical\" *ngFor=\"let division of subleague.divisions; trackBy: id\">\n          <ion-card-header class=\"division-header\">\n            <ion-card-subtitle>{{division.name}}</ion-card-subtitle>\n          </ion-card-header>\n          <ion-card-content class=\"ion-no-padding\">\n            <ion-grid style=\"width: 100%\">\n              <ion-row\n                lines=\"none\"\n                class=\"header-row\"\n              >\n                <ion-col class=\"team-name header\" size=\"7\">\n                  Teams\n                </ion-col>\n                <ion-col class=\"team-wins header\" size=\"2\">\n                  Wins\n                </ion-col>\n                <ion-col class=\"team-record header\" size=\"3\">\n                  Record\n                </ion-col>\n              </ion-row>\n              <ion-row\n                lines=\"none\"\n                class=\"team-row\"\n                [style]=\"'background-color: ' + team.mainColor + '; color: ' + team.mainTextColor\"\n                *ngFor=\"let team of division.teams; trackBy: id\"\n                (click)=\"openTeam(team.id)\"\n              >\n                <ion-col class=\"team-name\" size=\"7\">\n                  {{team.name}}\n                </ion-col>\n                <ion-col class=\"team-wins\" size=\"2\">\n                  {{team.wins}}\n                </ion-col>\n                <ion-col class=\"team-record\" size=\"3\">\n                  {{team.nonLosses}}-{{team.losses}}\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-card-content>\n        </ion-card>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StandingsPageComponent } from './standings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StandingsPageComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StandingsPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\n\nimport { APIStream } from 'src/lib/api/stream';\nimport { StreamData } from 'src/lib/model/streamData';\nimport { Standings } from 'src/lib/model/standings';\nimport { Team } from 'src/lib/model/team';\nimport { Leagues } from 'src/lib/model/leagues';\nimport { Subleague } from 'src/lib/model/subleague';\nimport { Division } from 'src/lib/model/division';\nimport { APIDatabase } from 'src/lib/api/database';\nimport { Tiebreaker } from 'src/lib/model/tiebreaker';\nimport { TeamPageComponent } from '../team-page/team-page.page';\n\ninterface LeagueData {\n  id: string;\n  name: string;\n  subleagues: SubleagueData[];\n}\n\ninterface SubleagueData {\n  id: string;\n  name: string;\n  divisions: DivisionData[];\n}\n\ninterface DivisionData {\n  id: string;\n  name: string;\n  teams: TeamData[];\n}\n\ninterface TeamData {\n  id: string;\n  name: string;\n  wins: number;\n  losses: number;\n  playoffs: boolean;\n}\n\n@Component({\n  selector: 'app-standings',\n  templateUrl: 'standings.page.html',\n  styleUrls: ['standings.page.scss']\n})\nexport class StandingsPageComponent implements OnInit {\n  loading = true;\n  leagues = new Leagues({});\n  standings = new Standings({});\n  tiebreakers = new Tiebreaker({});\n\n  data = { subleagues: [] } as LeagueData;\n\n  constructor(\n    private database: APIDatabase,\n    private modalController: ModalController,\n    private platform: Platform,\n    private stream: APIStream,\n  ) {\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.platform.ready();\n    this.stream.subscribe(async (evt: StreamData|Event) => {\n      if (evt instanceof StreamData) {\n        this.leagues = evt.leagues;\n        this.standings = evt.games.standings;\n      }\n      this.postprocess();\n    });\n  }\n\n  async openTeam(id: string) {\n    console.debug(`opening team: ${id}`);\n    const modal = await this.modalController.create({\n      component: TeamPageComponent,\n      componentProps: {\n        id,\n      },\n    });\n    return await modal.present();\n  }\n\n  async postprocess() {\n    const l = this.leagues?.leagues[0];\n    if (!l) {\n      return;\n    }\n\n    this.data.name = l.name;\n\n    const sortByWins = (a: Team, b: Team) => {\n      const aWins = this.standings.wins[a.id];\n      const bWins = this.standings.wins[b.id];\n\n      let ret = bWins - aWins;\n      if (ret === 0) {\n        const aTiebreaker = this.tiebreakers.order.indexOf(a.id);\n        const bTiebreaker = this.tiebreakers.order.indexOf(b.id);\n\n        ret = aTiebreaker - bTiebreaker;\n      }\n\n      return ret;\n    };\n\n    const records = this.standings.records;\n\n    this.tiebreakers = this.leagues.tiebreakers.find((tiebreaker: Tiebreaker) => tiebreaker.id === l.tiebreakers);\n    const teams = await this.database.teams();\n\n    const sl = this.leagues?.subleagues?.filter((s: Subleague) => {\n      return l.subleagues.indexOf(s.id) >= 0;\n    });\n\n    this.data.subleagues = sl.map((s: Subleague) => {\n      const subLeagueData = {\n        id: s.id,\n        name: s.name,\n      } as SubleagueData;\n\n      const teamsData = [] as TeamData[];\n\n      const d = this.leagues?.divisions?.filter((item: Division) => {\n        return s.divisions.indexOf(item.id) >= 0;\n      });\n\n      subLeagueData.divisions = d.sort((a: Division, b: Division) => {\n        return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n      }).map((div: Division) => {\n        const divisionData = {\n          id: div.id,\n          name: div.name,\n        } as DivisionData;\n\n        divisionData.teams = div.teams\n          .map((id: string) => teams.find((team: Team) => id === team.id))\n          .sort(sortByWins)\n          .map((team: Team) => {\n\n          const record = records[team.id];\n          const teamData = {\n            id: team.id,\n            name: team.fullName,\n            emoji: team.emoji,\n            emojiColor: team.emojiColor,\n            mainColor: team.mainColor,\n            secondaryColor: team.secondaryColor,\n            mainTextColor: team.contrastingMainColor,\n            secondaryTextColor: team.contrastingSecondaryColor,\n            wins: record.wins,\n            losses: record.losses,\n            nonLosses: record.nonLosses,\n            playoffs: false,\n          };\n\n          teamsData.push(teamData);\n\n          return teamData;\n        });\n\n        return divisionData;\n      });\n\n      teamsData.sort((a: TeamData, b: TeamData) => {\n        let ret = b.wins - a.wins;\n        if (ret === 0) {\n          ret = this.tiebreakers.order.indexOf(a.id) - this.tiebreakers.order.indexOf(b.id);\n        }\n\n        return ret;\n      }).filter((_, index) => {\n        return index < 4;\n      }).map((team: TeamData) => {\n        team.playoffs = true;\n      });\n\n      return subLeagueData;\n    });\n\n    this.loading = false;\n    // console.debug('leagues:', this.leagues);\n    // console.debug('standings:', this.standings);\n    // console.debug('teams:', teams);\n    // console.debug('data:', this.data);\n  }\n\n  id(item: any) {\n    if (item && item.id) {\n      return item.id;\n    }\n    return item;\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { StandingsPageComponent } from './standings.page';\n\nimport { StandingsPageRoutingModule } from './standings-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    StandingsPageRoutingModule\n  ],\n  declarations: [StandingsPageComponent]\n})\nexport class StandingsPageModule {}\n"]}