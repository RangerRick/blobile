{"version":3,"mappings":"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","names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","writeTask","classList","add","dispatchClick","arguments","remove","click","createGesture","gestureName","threshold","onStart","ev","currentX","currentY","hapticSelectionStart","onMove","hapticSelectionChanged","onEnd","hapticSelectionEnd","undefined","a","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","Object","assign","appendChild","_context","Promise","resolve","componentOnReady","detachComponent","element","removeViewFromDom","parentElement","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","this","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticImpact","sanitizeDOMString","untrustedString","constructor","value","isSanitizerEnabled","documentFragment","createDocumentFragment","workingDiv","innerHTML","blockedTags","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","err","console","error","nodeType","i","attributes","attribute","item","attributeName","name","allowedAttributes","includes","toLowerCase","attributeValue","removeAttribute","children","childNodes","config","Ionic","get","sanitizerEnabled","SPINNERS","bubbles","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","top","sin","left","cos","step","circular","elmDuration","cx","cy","fill","viewBox","transform","crescent","dots","_","lines","y1","y2","t","f","hostContext","selector","closest","createColorClasses","color","cssClassMap","getClassMap","classes","map","getClassList","Array","isArray","split","filter","trim","SCHEME","openURL","url","direction","animation","test","router","preventDefault","push"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","webpack:///node_modules/@ionic/core/dist/esm/index-9e3fe806.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js"],"sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n  try {\n    if (untrustedString instanceof IonicSafeString) {\n      return untrustedString.value;\n    }\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\n     * Create a document fragment\n     * separate from the main DOM,\n     * create a div to do our work in\n     */\n    const documentFragment = document.createDocumentFragment();\n    const workingDiv = document.createElement('div');\n    documentFragment.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\n     * Remove any elements\n     * that are blocked\n     */\n    blockedTags.forEach(blockedTag => {\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        const element = getElementsToRemove[elementIndex];\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        else {\n          documentFragment.removeChild(element);\n        }\n        /**\n         * We still need to sanitize\n         * the children of this element\n         * as they are left behind\n         */\n        const childElements = getElementChildren(element);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\n     * Go through remaining elements and remove\n     * non-allowed attribs\n     */\n    // IE does not support .children on document fragments, only .childNodes\n    const dfChildren = getElementChildren(documentFragment);\n    /* tslint:disable-next-line */\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    }\n    // Append document fragment to div\n    const fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment);\n    // First child is always the div we did our work in\n    const getInnerDiv = fragmentDiv.querySelector('div');\n    return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  }\n  catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\n    const attribute = element.attributes.item(i);\n    const attributeName = attribute.name;\n    // remove non-allowed attribs\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    }\n    // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n    const attributeValue = attribute.value;\n    /* tslint:disable-next-line */\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\n   * Sanitize any nested children\n   */\n  const childElements = getElementChildren(element);\n  /* tslint:disable-next-line */\n  for (let i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n  return (el.children != null) ? el.children : el.childNodes;\n};\nconst isSanitizerEnabled = () => {\n  const win = window;\n  const config = win && win.Ionic && win.Ionic.config;\n  if (config) {\n    if (config.get) {\n      return config.get('sanitizerEnabled', true);\n    }\n    else {\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n    }\n  }\n  return true;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nclass IonicSafeString {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\nexport { IonicSafeString as I, sanitizeDOMString as s };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]}