{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"names":["Tab","constructor","hostRef","registerInstance","this","loaded","active","setActive","prepareLazyLoaded","changeActive","isActive","component","attachComponent","delegate","el","e","console","error","Promise","resolve","undefined","render","tab","h","Host","role","class","getElement","style","Tabs","ionNavWillLoad","createEvent","ionTabsWillChange","ionTabsDidChange","transitioning","useRouter","onTabClicked","ev","href","detail","router","document","querySelector","push","select","closest","tabs","length","emit","componentWillRender","tabBar","selectedTab","getTab","shouldSwitch","notifyRouter","tabSwitch","getSelected","id","changed","element","markVisible","tabId","reject","leavingTab","navChanged","Array","from","querySelectorAll","onIonTabButtonClick","name","tabEl","find","t"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-7a8b7a1c.js';\nimport { a as attachComponent } from './framework-delegate-4392cd63.js';\nimport './helpers-dd7e4b7b.js';\n\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\n\nconst Tab = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.loaded = false;\n    /** @internal */\n    this.active = false;\n  }\n  async componentWillLoad() {\n    if (this.active) {\n      await this.setActive();\n    }\n  }\n  /** Set the active component for the tab */\n  async setActive() {\n    await this.prepareLazyLoaded();\n    this.active = true;\n  }\n  changeActive(isActive) {\n    if (isActive) {\n      this.prepareLazyLoaded();\n    }\n  }\n  prepareLazyLoaded() {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      }\n      catch (e) {\n        console.error(e);\n      }\n    }\n    return Promise.resolve(undefined);\n  }\n  render() {\n    const { tab, active, component } = this;\n    return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active\n      } }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"active\": [\"changeActive\"]\n  }; }\n};\nTab.style = tabCss;\n\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nconst Tabs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n    this.transitioning = false;\n    /** @internal */\n    this.useRouter = false;\n    this.onTabClicked = (ev) => {\n      const { href, tab } = ev.detail;\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n          router.push(href);\n        }\n      }\n      else {\n        this.select(tab);\n      }\n    };\n  }\n  async componentWillLoad() {\n    if (!this.useRouter) {\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n    }\n    if (!this.useRouter) {\n      const tabs = this.tabs;\n      if (tabs.length > 0) {\n        await this.select(tabs[0]);\n      }\n    }\n    this.ionNavWillLoad.emit();\n  }\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async select(tab) {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    await this.setActive(selectedTab);\n    await this.notifyRouter();\n    this.tabSwitch();\n    return true;\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async getTab(tab) {\n    return getTab(this.tabs, tab);\n  }\n  /**\n   * Get the currently selected tab.\n   */\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n  async setRouteId(id) {\n    const selectedTab = getTab(this.tabs, id);\n    if (!this.shouldSwitch(selectedTab)) {\n      return { changed: false, element: this.selectedTab };\n    }\n    await this.setActive(selectedTab);\n    return {\n      changed: true,\n      element: this.selectedTab,\n      markVisible: () => this.tabSwitch(),\n    };\n  }\n  /** @internal */\n  async getRouteId() {\n    const tabId = this.selectedTab && this.selectedTab.tab;\n    return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n  }\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n    if (!selectedTab) {\n      return;\n    }\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n      this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n    }\n  }\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n    return Promise.resolve(false);\n  }\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n  render() {\n    return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n  }\n  get el() { return getElement(this); }\n};\nconst getTab = (tabs, tab) => {\n  const tabEl = (typeof tab === 'string')\n    ? tabs.find(t => t.tab === tab)\n    : tab;\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\nTabs.style = tabsCss;\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"]}