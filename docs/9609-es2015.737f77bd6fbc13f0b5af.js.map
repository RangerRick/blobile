{"version":3,"sources":["webpack:///node_modules/capacitor-eventsource/dist/esm/definitions.js","webpack:///node_modules/capacitor-eventsource/dist/esm/web.js"],"names":["READY_STATE","EventSourceWeb","WebPlugin","constructor","super","name","platforms","this","opened","options","console","debug","url","Error","notifyListeners","state","CONNECTING","eventSource","window","EventSource","onopen","onOpen","bind","onmessage","onMessage","onerror","onError","ev","error","message","data","OPEN","close","CLOSED","EventSourcePluginImpl","registerWebPlugin"],"mappings":"6MAAWA,EAAW,MACtB,SAAWA,GACPA,EAAYA,EAAW,WAAiB,GAAK,aAC7CA,EAAYA,EAAW,KAAW,GAAK,OACvCA,EAAYA,EAAW,OAAa,GAAK,SAH7C,CAIGA,IAAgBA,EAAc,KALtBA,GAAW,GCEf,MAAMC,UAAuBC,KAChCC,cACIC,MAAM,CACFC,KAAM,cACNC,UAAW,CAAC,SAEhBC,KAAKC,QAAS,EAEH,gBAACC,GAEZ,GADAC,QAAQC,MAAO,4BAA2BF,EAAQG,SAC9CH,EAAQG,IAIR,MAAM,IAAIC,MAAM,mBAHhBN,KAAKK,IAAMH,EAAQG,IAMjB,aAEN,GADAF,QAAQC,MAAO,0BACVJ,KAAKK,IACN,MAAM,IAAIC,MAAM,kCAEpBN,KAAKO,gBAAgB,oBAAqB,CACtCC,MAAOf,EAAYgB,aAEvBT,KAAKU,YAAc,IAAIC,OAAOC,YAAYZ,KAAKK,KAC/CL,KAAKU,YAAYG,OAASb,KAAKc,OAAOC,KAAKf,MAC3CA,KAAKU,YAAYM,UAAYhB,KAAKiB,UAAUF,KAAKf,MACjDA,KAAKU,YAAYQ,QAAUlB,KAAKmB,QAAQJ,KAAKf,MAEjDmB,QAAQC,GACJpB,KAAKO,gBAAgB,QAAS,CAAEc,MAAOD,aAA+B,EAASA,EAAGE,UAEtFL,UAAUG,GACFpB,KAAKC,QACLD,KAAKO,gBAAgB,UAAW,CAAEe,QAASF,aAA+B,EAASA,EAAGG,OAG9FT,OAAOM,GACHpB,KAAKC,QAAS,EACdD,KAAKO,gBAAgB,OAAQ,CAAEe,QAASF,aAA+B,EAASA,EAAGE,UACnFtB,KAAKO,gBAAgB,oBAAqB,CAAEC,MAAOf,EAAY+B,OAExD,cACPrB,QAAQC,MAAO,0BACfJ,KAAKC,QAAS,EACVD,KAAKU,cACLV,KAAKU,YAAYe,QACjBzB,KAAKU,YAAYG,OAAS,KAC1Bb,KAAKU,YAAYM,UAAY,KAC7BhB,KAAKU,YAAYQ,QAAU,KAC3BlB,KAAKU,YAAc,KACnBV,KAAKO,gBAAgB,oBAAqB,CACtCC,MAAOf,EAAYiC,WAKnC,MAAMC,EAAwB,IAAIjC,GAGlCkC,QAAkBD","file":"x","sourcesContent":["export var READY_STATE;\n(function (READY_STATE) {\n    READY_STATE[READY_STATE[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    READY_STATE[READY_STATE[\"OPEN\"] = 1] = \"OPEN\";\n    READY_STATE[READY_STATE[\"CLOSED\"] = 2] = \"CLOSED\";\n})(READY_STATE || (READY_STATE = {}));\n//# sourceMappingURL=definitions.js.map","import { WebPlugin } from '@capacitor/core';\nimport { READY_STATE, } from './definitions';\nexport class EventSourceWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'EventSource',\n            platforms: ['web'],\n        });\n        this.opened = false;\n    }\n    async configure(options) {\n        console.debug(`EventSourceWeb.configure(${options.url})`);\n        if (options.url) {\n            this.url = options.url;\n        }\n        else {\n            throw new Error('url is required');\n        }\n    }\n    async open() {\n        console.debug(`EventSourceWeb.open()`);\n        if (!this.url) {\n            throw new Error('You must call configure first!');\n        }\n        this.notifyListeners('readyStateChanged', {\n            state: READY_STATE.CONNECTING,\n        });\n        this.eventSource = new window.EventSource(this.url);\n        this.eventSource.onopen = this.onOpen.bind(this);\n        this.eventSource.onmessage = this.onMessage.bind(this);\n        this.eventSource.onerror = this.onError.bind(this);\n    }\n    onError(ev) {\n        this.notifyListeners('error', { error: ev === null || ev === void 0 ? void 0 : ev.message });\n    }\n    onMessage(ev) {\n        if (this.opened) {\n            this.notifyListeners('message', { message: ev === null || ev === void 0 ? void 0 : ev.data });\n        }\n    }\n    onOpen(ev) {\n        this.opened = true;\n        this.notifyListeners('open', { message: ev === null || ev === void 0 ? void 0 : ev.message });\n        this.notifyListeners('readyStateChanged', { state: READY_STATE.OPEN });\n    }\n    async close() {\n        console.debug(`EventSourceWeb.close()`);\n        this.opened = false;\n        if (this.eventSource) {\n            this.eventSource.close();\n            this.eventSource.onopen = null;\n            this.eventSource.onmessage = null;\n            this.eventSource.onerror = null;\n            this.eventSource = null;\n            this.notifyListeners('readyStateChanged', {\n                state: READY_STATE.CLOSED,\n            });\n        }\n    }\n}\nconst EventSourcePluginImpl = new EventSourceWeb();\nexport { EventSourcePluginImpl as EventSource };\nimport { registerWebPlugin } from '@capacitor/core';\nregisterWebPlugin(EventSourcePluginImpl);\n//# sourceMappingURL=web.js.map"]}