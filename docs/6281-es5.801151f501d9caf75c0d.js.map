{"version":3,"mappings":"ofAOMA,aACJC,WAAYC,4GACVC,KAAiBC,KAAMF,GAIvBE,KAAKC,oBANHL,oCAQJM,WACE,IAAMC,EAAcH,KAAKI,MAAQC,QAAW,WACtCC,KAAOC,KAAWP,MACxB,OAAIG,IAGa,QAATG,EAAkB,QAAU,cAdlCV,oBAgBJY,iBACQC,EAAOT,KACPM,KAAOC,KAAWE,GAClBN,EAAcM,EAAKP,UACnBQ,EAAUC,IAASR,IAAgBQ,UACnCC,EAAqC,iBAAlBH,EAAKG,UAAyBH,EAAKG,SAAW,GAAKH,EAAKG,SAAWF,EAAQG,IAC9FC,EAAO,GACb,YAAIJ,EAAQK,QACV,QAASC,EAAI,EAAGA,EAAIN,EAAQK,QAASC,IACnCF,EAAKG,KAAKC,EAAYR,EAASE,EAAUI,EAAGN,EAAQK,2BAG/CL,EAAQS,MACf,QAASH,EAAI,EAAGA,EAAIN,EAAQS,MAAOH,IACjCF,EAAKG,KAAKG,EAAUV,EAASE,EAAUI,EAAGN,EAAQS,QAGtD,SAAQE,KAAEC,IAAM,CAAEC,SAAOC,KAAmBf,EAAKgB,OAA/BF,SACbjB,MADaiB,sBAEFpB,OAFEoB,IAGd,mBAAoBd,EAAKR,QAAUI,eAAkB,aAHvCkB,IAIZG,KAAM,cAAeC,MAAOjB,EAAQkB,YAAc,CAAEC,kBAAmBjB,EAAW,MAAS,IAAME,mCArCrGlB,KAwCAsB,EAAc,SAACR,EAASE,EAAUkB,EAAOC,GAC7C,IAAMC,EAAOtB,EAAQuB,GAAGrB,EAAUkB,EAAOC,GACzCC,SAAKL,MAAM,sBAAwBf,EAAW,QACtCS,KAAE,MAAO,CAAEa,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,UAASN,KAAE,SAAU,CAAEc,UAAWH,EAAKG,WAAa,mBAAoBC,GAAIJ,EAAKI,GAAIC,GAAIL,EAAKK,GAAIC,EAAGN,EAAKM,EAAGX,MAAOjB,EAAQkB,YAAc,CAAEC,kBAAmBjB,EAAW,MAAS,OAEpPQ,EAAY,SAACV,EAASE,EAAUkB,EAAOC,GAC3C,IAAMC,EAAOtB,EAAQuB,GAAGrB,EAAUkB,EAAOC,GACzCC,SAAKL,MAAM,sBAAwBf,EAAW,QACtCS,KAAE,MAAO,CAAEa,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,UAASN,KAAE,OAAQ,CAAEc,UAAW,mBAAoBI,GAAIP,EAAKO,GAAIC,GAAIR,EAAKQ,OAEjJ5C,EAAQ+B,MApDW","names":["Spinner","constructor","hostRef","registerInstance","this","paused","getName","spinnerName","name","config","mode","getIonMode","render","self","spinner","SPINNERS","duration","dur","svgs","circles","i","push","buildCircle","lines","buildLine","h","Host","class","createColorClasses","color","role","style","elmDuration","animationDuration","index","total","data","fn","viewBox","transform","cx","cy","r","y1","y2"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-spinner.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-7a8b7a1c.js';\nimport { c as config, b as getIonMode } from './ionic-global-63a97a32.js';\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst spinnerCss = \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}[dir=rtl] svg,:host-context([dir=rtl]) svg{left:unset;right:unset;right:0}[dir=rtl] svg,:host-context([dir=rtl]) svg{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px, 200px;stroke-dashoffset:0px;stroke-width:5.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) svg,:host(.spinner-paused) circle{-webkit-animation-play-state:paused;animation-play-state:paused}@-webkit-keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@-webkit-keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}@keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}\";\n\nconst Spinner = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * If `true`, the spinner's animation will be paused.\n     */\n    this.paused = false;\n  }\n  getName() {\n    const spinnerName = this.name || config.get('spinner');\n    const mode = getIonMode(this);\n    if (spinnerName) {\n      return spinnerName;\n    }\n    return (mode === 'ios') ? 'lines' : 'circular';\n  }\n  render() {\n    const self = this;\n    const mode = getIonMode(self);\n    const spinnerName = self.getName();\n    const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n    const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\n    const svgs = [];\n    if (spinner.circles !== undefined) {\n      for (let i = 0; i < spinner.circles; i++) {\n        svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n      }\n    }\n    else if (spinner.lines !== undefined) {\n      for (let i = 0; i < spinner.lines; i++) {\n        svgs.push(buildLine(spinner, duration, i, spinner.lines));\n      }\n    }\n    return (h(Host, { class: createColorClasses(self.color, {\n        [mode]: true,\n        [`spinner-${spinnerName}`]: true,\n        'spinner-paused': !!self.paused || config.getBoolean('_testing')\n      }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n  }\n};\nconst buildCircle = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\nSpinner.style = spinnerCss;\n\nexport { Spinner as ion_spinner };\n"]}