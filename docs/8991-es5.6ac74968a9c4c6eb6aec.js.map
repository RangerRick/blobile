{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/tap-click-cc1ae2b2.js"],"names":["startTapClick","config","scrollingEl","activatableEle","activeRipple","activeDefer","lastTouch","MOUSE_WAIT","lastActivated","useRippleEffect","getBoolean","clearDefers","WeakMap","onTouchEnd","ev","now","pointerUp","cancelActive","clearTimeout","removeActivated","pointerDown","parentElement","setActivatedElement","getActivatableTarget","el","y","pointerCoord","x","has","Error","classList","contains","ACTIVATED","addActivated","deferId","get","delay","isInstant","ADD_ACTIVATED_DEFERS","remove","setTimeout","Date","add","rippleEffect","getRippleEffect","addRipple","removeRipple","then","smooth","active","time","CLEAR_STATE_DEFERS","set","doc","document","addEventListener","target","t","composedPath","closest","path","i","length","shadowRoot","ripple","querySelector"],"mappings":"0KAEMA,EAAiBC,YACrB,IAEIC,EACAC,EACAC,EACAC,EALAC,EAA0B,IAAbC,EACbC,EAAgB,EAKdC,EAAkBR,EAAOS,WAAW,gBAAqBT,EAAOS,WAAW,mBAC3EC,EAAc,IAAIC,QASlBC,EAAcC,YAClBR,KAAYS,KAAID,GAChBE,EAAUF,IAcNG,EAAe,WACnBC,aAAab,GACbA,SACIF,IACFgB,GAAgB,GAChBhB,WAGEiB,EAAeN,YACfX,YAhCGD,GAA2D,OAA9BA,EAAYmB,gBAmChDnB,SACAoB,EAAoBC,EAAqBT,GAAKA,KAE1CE,EAAaF,YACjBQ,OAAoB,EAAWR,IAE3BQ,EAAsB,SAACE,EAAIV,GAE/B,IAAIU,GAAMA,IAAOrB,EAAjB,CAGAe,aAAab,GACbA,SACA,OAAWoB,EAAMC,KAAaZ,GAAtBa,EAAR,EAAM,EAAKF,EAAX,EAAM,EAEN,GAAItB,EAAgB,CAClB,GAAIQ,EAAYiB,IAAIzB,GAClB,MAAM,IAAI0B,MAAM,kBAEb1B,EAAe2B,UAAUC,SAASC,IACrCC,EAAa9B,EAAgBwB,EAAGF,GAElCN,GAAgB,GAGlB,GAAIK,EAAI,CACN,IAAMU,EAAUvB,EAAYwB,IAAIX,GAC5BU,IACFhB,aAAagB,GACbvB,EAAW,OAAQa,IAErB,IAAMY,EAAQC,EAAUb,GAAM,EAAIc,EAClCd,EAAGM,UAAUS,OAAOP,GACpB3B,EAAcmC,WAAW,WACvBP,EAAaT,EAAIG,EAAGF,GACpBpB,UACC+B,GAELjC,EAAiBqB,IAEbS,EAAe,SAACT,EAAIG,EAAGF,GAC3BjB,EAAgBiC,KAAK1B,MACrBS,EAAGM,UAAUY,IAAIV,GACjB,IAAMW,EAAelC,GAAmBmC,EAAgBpB,GACpDmB,GAAgBA,EAAaE,YAC/BC,IACA1C,EAAeuC,EAAaE,UAAUlB,EAAGF,KAGvCqB,EAAe,oBACf1C,IACFA,EAAa2C,KAAKR,YAAM,OAAIA,MAC5BnC,WAGEe,EAAmB6B,YACvBF,IACA,IAAMG,EAAS9C,EACf,GAAK8C,EAAL,CAGA,IAAMC,EAAOC,EAAqBV,KAAK1B,MAAQP,EAC/C,GAAIwC,GAAUE,EAAO,IAAMb,EAAUY,GAAS,CAC5C,IAAMf,EAAUM,WAAW,WACzBS,EAAOnB,UAAUS,OAAOP,GACxBrB,EAAW,OAAQsC,IAClBE,GACHxC,EAAYyC,IAAIH,EAAQf,QAGxBe,EAAOnB,UAAUS,OAAOP,KAGtBqB,EAAMC,SACZD,EAAIE,iBAAiB,iBAAkBzC,YACrCZ,EAAcY,EAAG0C,OACjBvC,MAEFoC,EAAIE,iBAAiB,eAAgB,WACnCrD,WAEFmD,EAAIE,iBAAiB,qBAAsBtC,GAC3CoC,EAAIE,iBAAiB,aAlHCzC,YACpBR,KAAYS,KAAID,GAChBM,EAAYN,QAiHduC,EAAIE,iBAAiB,cAAe1C,GAAW,GAC/CwC,EAAIE,iBAAiB,WAAY1C,GAAW,GAC5CwC,EAAIE,iBAAiB,YA7GAzC,YACnB,IAAM2C,KAAI1C,KAAID,GAAMP,EAChBD,EAAYmD,GACdrC,EAAYN,QA2GhBuC,EAAIE,iBAAiB,UAxGFzC,YACjB,IAAM2C,KAAI1C,KAAID,GAAMP,EAChBD,EAAYmD,GACdzC,EAAUF,SAuGVS,EAAwBT,YAC5B,IAAIA,EAAG4C,aAUL,OAAO5C,EAAG0C,OAAOG,QAAQ,oBARzB,IADA,IAAMC,EAAO9C,EAAG4C,eACPG,EAAI,EAAGA,EAAID,EAAKE,OAAS,EAAGD,IAAK,CACxC,IAAMrC,EAAKoC,EAAKC,GAChB,GAAIrC,EAAGM,WAAaN,EAAGM,UAAUC,SAAS,mBACxC,OAAOP,IAQTa,EAAab,YAAE,OACZA,EAAGM,UAAUC,SAAS,4BAEzBa,EAAmBpB,YACvB,GAAIA,EAAGuC,WAAY,CACjB,IAAMC,EAASxC,EAAGuC,WAAWE,cAAc,qBAC3C,GAAID,EACF,OAAOA,EAGX,OAAOxC,EAAGyC,cAAc,sBAEpBjC,EAAY,gBACZM,EAAuB,IACvBa,EAAqB,IACrB5C,EAAa","file":"x","sourcesContent":["import { o as now, p as pointerCoord } from './helpers-dd7e4b7b.js';\n\nconst startTapClick = (config) => {\n  let lastTouch = -MOUSE_WAIT * 10;\n  let lastActivated = 0;\n  let scrollingEl;\n  let activatableEle;\n  let activeRipple;\n  let activeDefer;\n  const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n  const clearDefers = new WeakMap();\n  const isScrolling = () => {\n    return scrollingEl !== undefined && scrollingEl.parentElement !== null;\n  };\n  // Touch Events\n  const onTouchStart = (ev) => {\n    lastTouch = now(ev);\n    pointerDown(ev);\n  };\n  const onTouchEnd = (ev) => {\n    lastTouch = now(ev);\n    pointerUp(ev);\n  };\n  const onMouseDown = (ev) => {\n    const t = now(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerDown(ev);\n    }\n  };\n  const onMouseUp = (ev) => {\n    const t = now(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerUp(ev);\n    }\n  };\n  const cancelActive = () => {\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    if (activatableEle) {\n      removeActivated(false);\n      activatableEle = undefined;\n    }\n  };\n  const pointerDown = (ev) => {\n    if (activatableEle || isScrolling()) {\n      return;\n    }\n    scrollingEl = undefined;\n    setActivatedElement(getActivatableTarget(ev), ev);\n  };\n  const pointerUp = (ev) => {\n    setActivatedElement(undefined, ev);\n  };\n  const setActivatedElement = (el, ev) => {\n    // do nothing\n    if (el && el === activatableEle) {\n      return;\n    }\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    const { x, y } = pointerCoord(ev);\n    // deactivate selected\n    if (activatableEle) {\n      if (clearDefers.has(activatableEle)) {\n        throw new Error('internal error');\n      }\n      if (!activatableEle.classList.contains(ACTIVATED)) {\n        addActivated(activatableEle, x, y);\n      }\n      removeActivated(true);\n    }\n    // activate\n    if (el) {\n      const deferId = clearDefers.get(el);\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n      const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\n      el.classList.remove(ACTIVATED);\n      activeDefer = setTimeout(() => {\n        addActivated(el, x, y);\n        activeDefer = undefined;\n      }, delay);\n    }\n    activatableEle = el;\n  };\n  const addActivated = (el, x, y) => {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n    const rippleEffect = useRippleEffect && getRippleEffect(el);\n    if (rippleEffect && rippleEffect.addRipple) {\n      removeRipple();\n      activeRipple = rippleEffect.addRipple(x, y);\n    }\n  };\n  const removeRipple = () => {\n    if (activeRipple !== undefined) {\n      activeRipple.then(remove => remove());\n      activeRipple = undefined;\n    }\n  };\n  const removeActivated = (smooth) => {\n    removeRipple();\n    const active = activatableEle;\n    if (!active) {\n      return;\n    }\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n    if (smooth && time > 0 && !isInstant(active)) {\n      const deferId = setTimeout(() => {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    }\n    else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n  const doc = document;\n  doc.addEventListener('ionScrollStart', ev => {\n    scrollingEl = ev.target;\n    cancelActive();\n  });\n  doc.addEventListener('ionScrollEnd', () => {\n    scrollingEl = undefined;\n  });\n  doc.addEventListener('ionGestureCaptured', cancelActive);\n  doc.addEventListener('touchstart', onTouchStart, true);\n  doc.addEventListener('touchcancel', onTouchEnd, true);\n  doc.addEventListener('touchend', onTouchEnd, true);\n  doc.addEventListener('mousedown', onMouseDown, true);\n  doc.addEventListener('mouseup', onMouseUp, true);\n};\nconst getActivatableTarget = (ev) => {\n  if (ev.composedPath) {\n    const path = ev.composedPath();\n    for (let i = 0; i < path.length - 2; i++) {\n      const el = path[i];\n      if (el.classList && el.classList.contains('ion-activatable')) {\n        return el;\n      }\n    }\n  }\n  else {\n    return ev.target.closest('.ion-activatable');\n  }\n};\nconst isInstant = (el) => {\n  return el.classList.contains('ion-activatable-instant');\n};\nconst getRippleEffect = (el) => {\n  if (el.shadowRoot) {\n    const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\n    if (ripple) {\n      return ripple;\n    }\n  }\n  return el.querySelector('ion-ripple-effect');\n};\nconst ACTIVATED = 'ion-activated';\nconst ADD_ACTIVATED_DEFERS = 200;\nconst CLEAR_STATE_DEFERS = 200;\nconst MOUSE_WAIT = 2500;\n\nexport { startTapClick };\n"]}