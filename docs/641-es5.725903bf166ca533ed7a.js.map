{"version":3,"mappings":"u2CACOA,wQACHC,qCACIC,eAASC,YACJC,SAAW,KAChBC,EAAKC,YAAc,aAAcC,UAHrCN,wCAKMO,WAAY,gJACTC,EAAKH,aACNG,EAAKC,wBAFKC,KAIVF,EAAKL,UAJKO,qBAILP,OAJKO,SAKJF,EAAKG,aALD,OAOTR,OAPSO,SAOQJ,UAAUH,SAASS,QAAQ,UAPnC,OAOdJ,EAAKL,SAPSO,4EASZC,WAAa,mJAEVH,EAAKH,aACNG,EAAKC,wBAEgB,QAAxBI,EAAKL,EAAKL,oBAAsBU,GAAyBA,EAAGC,UAC7DN,EAAKL,SAAW,KAND,gFAQnBM,WACI,MAAML,KAAKW,YAAY,mGAxBGC","names":["s","constructor","super","arguments","wakeLock","this","isSupported","navigator","keepAwake","e","throwUnsupportedError","_context","allowSleep","request","_a","release","unavailable","WebPlugin"],"sources":["webpack:///node_modules/@capacitor-community/keep-awake/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nexport class KeepAwakeWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.wakeLock = null;\r\n        this.isSupported = 'wakeLock' in navigator;\r\n    }\r\n    async keepAwake() {\r\n        if (!this.isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        if (this.wakeLock) {\r\n            await this.allowSleep();\r\n        }\r\n        this.wakeLock = await navigator.wakeLock.request('screen');\r\n    }\r\n    async allowSleep() {\r\n        var _a;\r\n        if (!this.isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        (_a = this.wakeLock) === null || _a === void 0 ? void 0 : _a.release();\r\n        this.wakeLock = null;\r\n    }\r\n    throwUnsupportedError() {\r\n        throw this.unavailable('Screen Wake Lock API not available in this browser.');\r\n    }\r\n}\r\n"]}