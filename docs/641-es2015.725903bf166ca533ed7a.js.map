{"version":3,"mappings":"oLACO,gBAA2BA,KAC9BC,cACIC,SAASC,WACTC,KAAKC,SAAW,KAChBD,KAAKE,YAAc,aAAcC,UAE/BC,YAAY,qCACTC,EAAKH,aACNG,EAAKC,wBAELD,EAAKJ,iBACCI,EAAKE,cAEfF,EAAKJ,eAAiBE,UAAUF,SAASO,QAAQ,WAPnC,GASZD,aAAa,qCACf,IAAIE,EACCJ,EAAKH,aACNG,EAAKC,wBAEgB,QAAxBG,EAAKJ,EAAKJ,gBAA6B,IAAPQ,GAAyBA,EAAGC,UAC7DL,EAAKJ,SAAW,MAND,GAQnBK,wBACI,MAAMN,KAAKW,YAAY","names":["WebPlugin","constructor","super","arguments","this","wakeLock","isSupported","navigator","keepAwake","e","throwUnsupportedError","allowSleep","request","_a","release","unavailable"],"sources":["webpack:///node_modules/@capacitor-community/keep-awake/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nexport class KeepAwakeWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.wakeLock = null;\r\n        this.isSupported = 'wakeLock' in navigator;\r\n    }\r\n    async keepAwake() {\r\n        if (!this.isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        if (this.wakeLock) {\r\n            await this.allowSleep();\r\n        }\r\n        this.wakeLock = await navigator.wakeLock.request('screen');\r\n    }\r\n    async allowSleep() {\r\n        var _a;\r\n        if (!this.isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        (_a = this.wakeLock) === null || _a === void 0 ? void 0 : _a.release();\r\n        this.wakeLock = null;\r\n    }\r\n    throwUnsupportedError() {\r\n        throw this.unavailable('Screen Wake Lock API not available in this browser.');\r\n    }\r\n}\r\n"]}