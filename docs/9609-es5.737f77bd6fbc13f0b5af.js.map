{"version":3,"sources":["webpack:///node_modules/capacitor-eventsource/dist/esm/definitions.js","webpack:///node_modules/capacitor-eventsource/dist/esm/web.js"],"names":["READY_STATE","EventSourceWeb","constructor","super","name","platforms","opened","options","console","debug","url","Error","this","notifyListeners","state","CONNECTING","eventSource","window","EventSource","onopen","onOpen","bind","onmessage","onMessage","onerror","onError","ev","error","message","data","OPEN","close","CLOSED","WebPlugin","EventSourcePluginImpl","registerWebPlugin"],"mappings":"6/CAAWA,GACX,SAAWA,GACPA,EAAYA,EAAW,WAAiB,GAAK,aAC7CA,EAAYA,EAAW,KAAW,GAAK,OACvCA,EAAYA,EAAW,OAAa,GAAK,SAH7C,CAIGA,IAAgBA,EAAc,KALtBA,GCEEC,E,4QACTC,aAAa,a,4FAAA,UACTC,cAAM,CACFC,KAAM,cACNC,UAAW,CAAC,UAEXC,UALI,E,mEAOE,WAACC,GAAD,kFACXC,QAAQC,MAARD,mCAA0CD,EAAQG,IAAlDF,MACID,EAAQG,IAFD,sBAMD,IAAIC,MAAM,mBANT,OAGPC,KAAKF,IAAMH,EAAQG,IAHZ,8C,6FASL,+FACNF,QAAQC,MAAO,yBACVG,KAAKF,IAFJ,sBAGI,IAAIC,MAAM,kCAHd,OAKNC,KAAKC,gBAAgB,oBAAqB,CACtCC,MAAOd,EAAYe,aAEvBH,KAAKI,YAAc,IAAIC,OAAOC,YAAYN,KAAKF,KAC/CE,KAAKI,YAAYG,OAASP,KAAKQ,OAAOC,KAAKT,MAC3CA,KAAKI,YAAYM,UAAYV,KAAKW,UAAUF,KAAKT,MACjDA,KAAKI,YAAYQ,QAAUZ,KAAKa,QAAQJ,KAAKT,MAXvC,8C,kEAaVa,SAAQC,GACJd,KAAKC,gBAAgB,QAAS,CAAEc,MAAOD,eAAwCA,EAAGE,Y,uBAEtFL,SAAUG,GACFd,KAAKN,QACLM,KAAKC,gBAAgB,UAAW,CAAEe,QAASF,eAAwCA,EAAGG,S,oBAG9FT,SAAOM,GACHd,KAAKN,UACLM,KAAKC,gBAAgB,OAAQ,CAAEe,QAASF,eAAwCA,EAAGE,UACnFhB,KAAKC,gBAAgB,oBAAqB,CAAEC,MAAOd,EAAY8B,S,gDAExD,4FACPtB,QAAQC,MAAO,0BACfG,KAAKN,UACDM,KAAKI,cACLJ,KAAKI,YAAYe,QACjBnB,KAAKI,YAAYG,OAAS,KAC1BP,KAAKI,YAAYM,UAAY,KAC7BV,KAAKI,YAAYQ,QAAU,KAC3BZ,KAAKI,YAAc,KACnBJ,KAAKC,gBAAgB,oBAAqB,CACtCC,MAAOd,EAAYgC,UAVpB,8C,8EA3CqBC,MA0D9BC,EAAwB,IAAIjC,KAGlCkC,MAAkBD,O","file":"x","sourcesContent":["export var READY_STATE;\n(function (READY_STATE) {\n    READY_STATE[READY_STATE[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    READY_STATE[READY_STATE[\"OPEN\"] = 1] = \"OPEN\";\n    READY_STATE[READY_STATE[\"CLOSED\"] = 2] = \"CLOSED\";\n})(READY_STATE || (READY_STATE = {}));\n//# sourceMappingURL=definitions.js.map","import { WebPlugin } from '@capacitor/core';\nimport { READY_STATE, } from './definitions';\nexport class EventSourceWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'EventSource',\n            platforms: ['web'],\n        });\n        this.opened = false;\n    }\n    async configure(options) {\n        console.debug(`EventSourceWeb.configure(${options.url})`);\n        if (options.url) {\n            this.url = options.url;\n        }\n        else {\n            throw new Error('url is required');\n        }\n    }\n    async open() {\n        console.debug(`EventSourceWeb.open()`);\n        if (!this.url) {\n            throw new Error('You must call configure first!');\n        }\n        this.notifyListeners('readyStateChanged', {\n            state: READY_STATE.CONNECTING,\n        });\n        this.eventSource = new window.EventSource(this.url);\n        this.eventSource.onopen = this.onOpen.bind(this);\n        this.eventSource.onmessage = this.onMessage.bind(this);\n        this.eventSource.onerror = this.onError.bind(this);\n    }\n    onError(ev) {\n        this.notifyListeners('error', { error: ev === null || ev === void 0 ? void 0 : ev.message });\n    }\n    onMessage(ev) {\n        if (this.opened) {\n            this.notifyListeners('message', { message: ev === null || ev === void 0 ? void 0 : ev.data });\n        }\n    }\n    onOpen(ev) {\n        this.opened = true;\n        this.notifyListeners('open', { message: ev === null || ev === void 0 ? void 0 : ev.message });\n        this.notifyListeners('readyStateChanged', { state: READY_STATE.OPEN });\n    }\n    async close() {\n        console.debug(`EventSourceWeb.close()`);\n        this.opened = false;\n        if (this.eventSource) {\n            this.eventSource.close();\n            this.eventSource.onopen = null;\n            this.eventSource.onmessage = null;\n            this.eventSource.onerror = null;\n            this.eventSource = null;\n            this.notifyListeners('readyStateChanged', {\n                state: READY_STATE.CLOSED,\n            });\n        }\n    }\n}\nconst EventSourcePluginImpl = new EventSourceWeb();\nexport { EventSourcePluginImpl as EventSource };\nimport { registerWebPlugin } from '@capacitor/core';\nregisterWebPlugin(EventSourcePluginImpl);\n//# sourceMappingURL=web.js.map"]}