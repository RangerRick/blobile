{"version":3,"mappings":"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","names":["e","oxw","updateService","i","n","L","path","component","constructor","t","o","l","G","V","this","header","p","hasSpeech","window","speechSynthesis","ngOnInit","platform","ready","console","debug","h","devicePlatform","error","deploy","getConfiguration","betaEnabled","channel","toLowerCase","current","settings","getAll","teams","volume","Math","round","database","voice","sort","fullName","voices","voiceService","commentaryLevels","m","commentaryLevel","loading","setBetaEnabled","getTeamName","find","id","setBoolean","setString","setVolume","setNumber","detail","value","setVoice","speak","setCommentaryLevel","parseInt","preventDefault","stopPropagation","say","force","setFavoriteTeam","selectors","B","d","k","r","_","s"],"sources":["webpack:///src/app/settings/settings.page.html","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.page.ts","webpack:///src/app/settings/settings.module.ts"],"sourcesContent":["<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-title>Slettings</ion-title>\n    <ion-buttons slot=\"secondary\">\n      <ion-button *ngIf=\"loading\">\n        <ion-spinner></ion-spinner>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list lines=\"none\" class=\"ion-text-wrap\">\n    <span *ngIf=\"devicePlatform !== 'web'\">\n      <!-- native-only stuff -->\n      <ion-list-header lines=\"full\">\n        <h3>Automatic Updates</h3>\n      </ion-list-header>\n      <ion-item>\n        <ion-label class=\"ion-text-wrap\">Receive content updates early?</ion-label>\n        <ion-toggle *ngIf=\"current\" (ionChange)=\"setBetaEnabled()\" [(ngModel)]=\"current.betaEnabled\" slot=\"end\"></ion-toggle>\n      </ion-item>\n      <ion-item *ngIf=\"updateService.updateAvailable && !updateService.updateReady && updateService.percentDone\">\n        <ion-label slot=\"start\">{{updateService.phase}}:</ion-label>\n        <ion-progress-bar value=\"{{updateService.percentDone}}\"></ion-progress-bar>\n      </ion-item>\n      <ion-item *ngIf=\"updateService.updateReady\" color=\"danger\">\n        <ion-label class=\"ion-text-wrap\">A content update is available.</ion-label>\n        <ion-button slot=\"end\" color=\"light\" (click)=\"updateService.reload()\">Apply</ion-button>\n      </ion-item>\n      <ion-list-header lines=\"full\">\n        <h3>Disable Sleep</h3>\n      </ion-list-header>\n      <ion-item>\n        <ion-label class=\"ion-text-wrap\">Disable sleep while games are active?</ion-label>\n        <ion-toggle *ngIf=\"current\" (ionChange)=\"setBoolean('disableSleep')\" [(ngModel)]=\"current.disableSleep\" slot=\"end\"></ion-toggle>\n      </ion-item>\n    </span>\n    <ion-list-header lines=\"full\">\n      <h3>Interface</h3>\n    </ion-list-header>\n    <ion-item>\n      <ion-label class=\"ion-text-wrap\">Reduce motion in effects?</ion-label>\n      <ion-toggle *ngIf=\"current\" (ionChange)=\"setBoolean('reduceMotion')\" [(ngModel)]=\"current.reduceMotion\" slot=\"end\"></ion-toggle>\n    </ion-item>\n    <ion-item>\n      <ion-label class=\"ion-text-wrap\">Always use dark mode?</ion-label>\n      <ion-toggle *ngIf=\"current\" (ionChange)=\"settings.setDarkMode(current.darkMode)\" [(ngModel)]=\"current.darkMode\" slot=\"end\"></ion-toggle>\n    </ion-item>\n    <ion-list-header lines=\"full\">\n      <h3>Audio</h3>\n    </ion-list-header>\n    <ion-item>\n      <ion-label class=\"ion-text-wrap\">Enable Sound Effects?</ion-label>\n      <ion-toggle *ngIf=\"current\" (ionChange)=\"setBoolean('audio')\" [(ngModel)]=\"current.audio\" slot=\"end\"></ion-toggle>\n    </ion-item>\n    <ion-item>\n      <ion-label class=\"ion-text-wrap\">Volume:</ion-label>\n      <ion-range aria-label=\"Volume\" *ngIf=\"current\" min=\"0\" max=\"1000\" debounce=\"200\" (ionChange)=\"setVolume($event)\" [(ngModel)]=\"volume\" slot=\"end\"></ion-range>\n    </ion-item>\n    <ion-item *ngIf=\"hasSpeech\">\n      <ion-label class=\"ion-text-wrap\">Enable Speech?</ion-label>\n      <ion-toggle *ngIf=\"current\" (ionChange)=\"setBoolean('speech')\" [(ngModel)]=\"current.speech\" slot=\"end\"></ion-toggle>\n    </ion-item>\n    <ion-item *ngIf=\"hasSpeech\">\n      <ion-icon name=\"volume-high-outline\" slot=\"start\" (click)=\"speak($event)\" class=\"ion-no-margin\" style=\"margin-right: 0.5em\"></ion-icon>\n      <ion-label for=\"select-voice\" class=\"ion-text-wrap\">Voice:</ion-label>\n      <ion-select *ngIf=\"current && voice\" id=\"select-voice\" aria-label=\"Select a Voice\" class=\"ion-text-wrap\" (ionChange)=\"setVoice($event)\" interface=\"action-sheet\" [interfaceOptions]=\"voiceOptions\" okText=\"Choose\" cancelText=\"Cancel\" [value]=\"current.voice\">\n        <ion-select-option *ngFor=\"let voice of voices\" [value]=\"voice.voiceURI\">{{voice.name}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n    <ion-item *ngIf=\"hasSpeech\">\n      <ion-label for=\"choose-commetary-level\" class=\"ion-text-wrap\">Commentary\n        Level:</ion-label>\n      <ion-select *ngIf=\"current && commentaryLevel\" id=\"choose-commentary-level\" aria-label=\"Choose a Commentary Level\" class=\"ion-text-wrap\" (ionChange)=\"setCommentaryLevel($event)\" interface=\"action-sheet\" [interfaceOptions]=\"commentaryLevelOptions\" okText=\"Choose\" cancelText=\"Cancel\" [value]=\"current.commentaryLevel\">\n        <ion-select-option *ngFor=\"let level of commentaryLevels | keyvalue\" [value]=\"level.key\">{{level.value}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n    <ion-list-header lines=\"full\">\n      <h3>Teams</h3>\n    </ion-list-header>\n    <ion-item id=\"bl-team-selector\">\n      <ion-label class=\"ion-text-wrap\">\n        <ion-label for=\"choose-your-team\">\n          <h4>Choose Your Team:</h4>\n        </ion-label>\n        <ion-note>Your team is always first in the live feed.</ion-note>\n      </ion-label>\n      <ion-select *ngIf=\"current && teams\" id=\"choose-your-team\" aria-label=\"Choose Your Team\" class=\"ion-text-wrap\" (ionChange)=\"setString('favoriteTeam', $event)\" interface=\"action-sheet\" [interfaceOptions]=\"teamOptions\" okText=\"Choose\" cancelText=\"Cancel\" [(ngModel)]=\"current.favoriteTeam\">\n        <ion-select-option *ngFor=\"let team of teams; trackBy: id\" [value]=\"team.id\">{{team.fullName}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n  </ion-list>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Device } from '@capacitor/device';\n\nimport { Deploy } from 'cordova-plugin-ionic/dist/ngx';\n\nimport { Team } from '../../lib/model/team';\n\nimport { UpdateService } from '../../lib/update.service';\nimport { APIDatabase } from '../../lib/api/database';\nimport { Settings, SettingsService, COMM_LEVEL } from '../../lib/settings.service';\nimport { Platform } from '@ionic/angular';\nimport Util from 'src/lib/util';\nimport { VoiceService } from 'src/lib/voice.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  public loading = true;\n\n  public current: Settings;\n  public betaEnabled = false;\n  public devicePlatform = 'web';\n  public hasSpeech = false;\n\n  public teamOptions: any = {\n    header: 'Choose Your Team',\n  };\n  public voiceOptions: any = {\n    header: 'Choose a Voice',\n  };\n  public commentaryLevelOptions: any = {\n    header: 'Choose a Commentary Level',\n  };\n\n  public teams: Team[];\n  public volume: number;\n  public voices: SpeechSynthesisVoice[];\n  public voice: SpeechSynthesisVoice;\n  public commentaryLevels: Object;\n  public commentaryLevel: number;\n\n  id = Util.trackById;\n\n  constructor(\n    public database: APIDatabase,\n    public deploy: Deploy,\n    private platform: Platform,\n    public settings: SettingsService,\n    public updateService: UpdateService,\n    public voiceService: VoiceService,\n  ) {\n    this.hasSpeech = window.speechSynthesis !== undefined;\n  }\n\n  async ngOnInit() {\n    await this.platform.ready();\n    console.debug('SettingsPage.ngOnInit()');\n\n    try {\n      const info = await Device.getInfo();\n      this.devicePlatform = info.platform;\n      console.debug(`SettingsPage.ngOnInit(): platform=${this.devicePlatform}`);\n    } catch (err) {\n      console.error('SettingsPage.ngOnInit(): failed to get device info:', err);\n    }\n\n    if (this.devicePlatform !== 'web') {\n      try {\n        const configuration = await this.deploy.getConfiguration();\n        this.betaEnabled = configuration.channel.toLowerCase() === 'beta';\n        console.debug(`SettingsPage.ngOnInit(): betaEnabled=${this.betaEnabled}`);\n      } catch (err) {\n        console.error('SettingsPage.ngOnInit(): failed to get deploy configuration:', err);\n      }\n    }\n\n    this.current = await this.settings.getAll();\n    this.volume = Math.round(this.current.volume * 1000);\n\n    this.teams = (await this.database.teams()).sort((a: Team, b: Team) => {\n      return (a.fullName < b.fullName) ? -1 : (a.fullName > b.fullName) ? 1 : 0;\n    });\n\n    this.voices = this.voiceService.voices();\n    this.voice = await this.voiceService.voice(this.current.voice);\n\n    this.commentaryLevels = COMM_LEVEL;\n    this.commentaryLevel = this.current.commentaryLevel;\n\n    this.loading = false;\n    console.debug('SettingsPage.onInit(): current settings=', this.current);\n  }\n\n  async setBetaEnabled() {\n    return await this.settings.setBetaEnabled(this.current.betaEnabled);\n  }\n\n  getTeamName(id: string) {\n    const team = this.teams.find((t: Team) => t.id === id);\n    return team ? team.fullName : '';\n  }\n\n  async setBoolean(key: string) {\n    return await this.settings.setBoolean(key, this.current[key]);\n  }\n  async setString(key: string, ev?: { detail: { value: any }}) {\n    console.debug('setString: key=', key);\n    console.debug('setString: ev=', ev);\n    if (ev && ev.detail && ev.detail.value) {\n\n    }\n    return await this.settings.setString(key, this.current[key]);\n  }\n  async setVolume(ev?: CustomEvent<any>) {\n    return await this.settings.setNumber('volume', ev.detail.value / 1000.0);\n  }\n\n  async setVoice(ev?: CustomEvent<any>) {\n    const voice = await this.voiceService.voice(ev?.detail?.value);\n    if (voice) {\n      await this.settings.setVoice(ev.detail.value);\n      this.speak();\n    } else {\n      console.error(`Unable to locate voice: ${ev?.detail?.value}`);\n    }\n  }\n\n  async setCommentaryLevel(ev?: CustomEvent<any>) {\n    return await this.settings.setCommentaryLevel(parseInt(ev.detail.value));\n  }\n\n  async speak(ev?: CustomEvent<any>) {\n    ev?.preventDefault();\n    ev?.stopPropagation();\n    return this.voiceService.say('The commissioner is doing a great job!', {\n      force: true,\n    });\n  }\n\n  async setFavoriteTeam(detail: { value: string }) {\n    const team = this.teams.find((t: Team) => {\n      return t.id === detail.value;\n    });\n    this.settings.setFavoriteTeam(team?.id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n"]}